{"version":3,"sources":["modules/components/todo-input/todo-input.jsx","modules/components/todo-item/todo-item.jsx","modules/components/todo-list/todo-list.jsx","modules/components/todo-filter/todo-filter.jsx","modules/components/todo-notes/todo-notes.jsx","modules/containers/todo/todo.jsx","modules/actions/actionCreator.js","constans.js","modules/components/title/title.jsx","modules/App.js","modules/redusers/tasks.js","modules/store.js","modules/redusers/filters.js","modules/redusers/index.js","index.js"],"names":["ToDoInput","_ref","value","onChange","onSubmit","react_default","a","createElement","className","type","placeholder","defaultProps","onKeyPress","ToDoItem","id","text","isCompleted","removeTask","completeTask","isEditing","addEdeting","onDoubleClick","e","key","target","defaultValue","checked","onClick","defaultProp","handleDescriptionChange","ToDoList","tasksList","map","_ref2","todo_item_todo_item","FILTERS_BTN","ToDoFilter","amount","activeFilter","changeFilter","clearAll","concat","Notes","href","ToDo","state","description","actualtext","handleInputChange","_this","setState","configEdeting","item","scroll_height","scrollHeight","style","height","length","props","addTask","preventDefault","Date","getTime","filterTasks","tasks","filter","task","getActiveTasksCounter","this","_this$props","filters","isTasksExsist","filteredTasks","taskCounter","todo_input_todo_input","todo_list_todo_list","todo_filter_todo_filter","todo_notes_todo_notes","Component","connect","_ref3","Title","title","PropTypes","string","App","react","components_title_title","todo_todo","TASKS","load","namespace","preloadedState","arguments","undefined","Object","toConsumableArray","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","createRoot","document","getElementById","render","es","modules_App"],"mappings":"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","file":"static/js/main.1034856d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./todo-input.css\";\r\n\r\nconst ToDoInput = ({ value, onChange, onSubmit }) => (\r\n  <form onSubmit={onSubmit} className=\"todo-input-wrapper\">\r\n    <button type=\"submit\" className=\"add-btn\">\r\n      Add Task\r\n    </button>\r\n    <input\r\n      value={value}\r\n      className=\"add-input\"\r\n      placeholder=\"What needs to be done?\"\r\n      onChange={onChange}\r\n    />\r\n  </form>\r\n);\r\n\r\nToDoInput.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nToDoInput.defaultProps = {\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  value: \"\",\r\n};\r\n\r\nexport default ToDoInput;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./todo-item.css\";\r\nconst ToDoItem = ({\r\n  id,\r\n  text,\r\n  isCompleted,\r\n  removeTask,\r\n  completeTask,\r\n  isEditing,\r\n  addEdeting,\r\n  onKeyPress,\r\n  onChange\r\n}) => (\r\n  <li\r\n    onDoubleClick={() => addEdeting(id)}\r\n    className={isCompleted ? \"todo-item checked\" : \"todo-item\"}\r\n  >\r\n    {isEditing? <input type = \"textarea\" className=\"todo-item-description input\" onKeyPress = {(e) => onKeyPress(id,e.key,e.target)} onChange={onChange}  defaultValue = {text}></input> :\r\n     <div\r\n      className=\"todo-item-description\"\r\n    >\r\n      {text}\r\n    </div>}\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={isCompleted}\r\n      onChange={() => completeTask(id)}\r\n      className={\r\n        isCompleted ? \"tasks-btn-complete\" : \"tasks-btn-complete checked\"\r\n      }\r\n    />\r\n    <div\r\n      className=\"tasks-btn-delete \"\r\n      onClick={() => removeTask(id)}\r\n    ></div>\r\n  </li>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n  text: PropTypes.string,\r\n  isCompleted: PropTypes.bool,\r\n  isEditing: PropTypes.bool,\r\n  removeTask: PropTypes.func,\r\n  id: PropTypes.number,\r\n  onKeyPress: PropTypes.func,\r\n  handleDescriptionChange: PropTypes.func,\r\n  addEdeting: PropTypes.func,\r\n};\r\n\r\nToDoItem.defaultProp = {\r\n  text: \"\",\r\n  isCompleted: false,\r\n  isEditing: false,\r\n  removeTask: () => {},\r\n  id: 0,\r\n  onKeyPress: () => {},\r\n  handleDescriptionChange: () => {},\r\n  addEdeting: () => {},\r\n};\r\nexport default ToDoItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ToDoItem from \"../todo-item/todo-item\";\r\nimport \"./todo-list.css\";\r\n\r\nconst ToDoList = ({\r\n  tasksList,\r\n  removeTask,\r\n  completeTask,\r\n  handleDescriptionChange,\r\n  addEdeting,\r\n  onKeyPress,\r\n  onChange,\r\n}) => (\r\n  <ul className=\"todo-list\">\r\n    {tasksList.map(({ id, text, isCompleted, isEditing}) => (\r\n      <ToDoItem\r\n        handleDescriptionChange={handleDescriptionChange}\r\n        completeTask={completeTask}\r\n        removeTask={removeTask}\r\n        id={id}\r\n        key={id}\r\n        text={text}\r\n        addEdeting = {addEdeting}\r\n        isEditing = {isEditing}\r\n        isCompleted={isCompleted}\r\n        onKeyPress = {onKeyPress}\r\n        onChange = {onChange}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n  tasksList: PropTypes.array,\r\n  removeTask: PropTypes.func,\r\n  completeTask: PropTypes.func,\r\n  handleDescriptionChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n};\r\n\r\nToDoList.defaultProps = {\r\n  tasksList: [],\r\n  removeTask: () => {},\r\n  completeTask: () => {},\r\n  handleDescriptionChange: () => {},\r\n  onKeyPress: () => {},\r\n};\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./todo-filter.css\";\r\n\r\nconst FILTERS_BTN = [\r\n  {\r\n    text: \"Show All\",\r\n    id: \"all\",\r\n  },\r\n  {\r\n    text: \"Show Active\",\r\n    id: \"active\",\r\n  },\r\n  {\r\n    text: \"Show Completed\",\r\n    id: \"completed\",\r\n  },\r\n];\r\n\r\nconst ToDoFilter = ({ amount, activeFilter, changeFilter, clearAll }) => (\r\n  <div className=\"todo-filter\">\r\n    <span className=\"amount\">{`${amount} Tasks left`}</span>\r\n    <div className=\"btn-group\">\r\n      {FILTERS_BTN.map(({ text, id }) => (\r\n        <button\r\n          onClick={() => {\r\n            changeFilter(id);\r\n          }}\r\n          key={id}\r\n          className={id === activeFilter ? \"btn tabbed\" : \"btn\"}\r\n        >\r\n          {text}\r\n        </button>\r\n      ))}\r\n    </div>\r\n    <button onClick={clearAll} className=\"btn delete\">\r\n      Clear All\r\n    </button>\r\n  </div>\r\n);\r\n\r\nToDoFilter.propTypes = {\r\n  amount: PropTypes.number,\r\n  activeFilter: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nToDoFilter.defaultProp = {\r\n  changeFilter: () => {},\r\n  activeFilter: \"\",\r\n  amount: 0,\r\n};\r\n\r\nexport default ToDoFilter;","import React from \"react\";\r\n\r\nimport \"./todo-notes.css\";\r\n\r\nconst Notes = () => {\r\n  return (\r\n    <div className=\"app-explanation\">\r\n      <h3 className=\"app-explanation-item\">Click to edit a task</h3>\r\n      <h3 className=\"app-explanation-item\">\r\n        Press \"Enter\" to save your changes\r\n      </h3>\r\n      <h3 className=\"app-explanation-item\">\r\n        Created by{\" \"}\r\n        <a className=\"my-profile\" href=\"/#\">\r\n          Egor Golovin\r\n        </a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addTask,\r\n  removeTask,\r\n  completeTask,\r\n  changeFilter,\r\n  addEdeting,\r\n  clearAll,\r\n  configEdeting,\r\n} from \"../../actions/actionCreator\";\r\n\r\nimport TodoInput from \"../../components/todo-input/todo-input\";\r\nimport TodoList from \"../../components/todo-list/todo-list\";\r\nimport TodoFilter from \"../../components/todo-filter/todo-filter\";\r\nimport Notes from \"../../components/todo-notes/todo-notes\";\r\n\r\nimport \"./todo.css\";\r\n\r\nclass ToDo extends Component {\r\n  state = {\r\n    description: \"\",\r\n    actualtext: \"\",\r\n  };\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      description: value,\r\n    });\r\n  };\r\n\r\n  handleDescriptionChange = ({ target: { value }}) => {\r\n    this.setState({\r\n        actualtext: value\r\n    })\r\n    \r\n    \r\n  };\r\n\r\n  configEdeting = (id, key, item) => {\r\n    let { actualtext } = this.state;\r\n    let scroll_height = item.scrollHeight;\r\n    item.style.height = scroll_height +'px';\r\n    if (actualtext.length > 3 && key === \"Enter\") {\r\n      let { configEdeting } = this.props;\r\n      configEdeting(id, actualtext);\r\n    }\r\n  };\r\n\r\n  addTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { description } = this.state;\r\n\r\n    if (description.length > 3) {\r\n      const { addTask } = this.props;\r\n      addTask(new Date().getTime(), description, false, false);\r\n\r\n      this.setState({\r\n        description: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  filterTasks = (tasks, activeFilter) => {\r\n    switch (activeFilter) {\r\n      case \"completed\":\r\n        return tasks.filter((task) => task.isCompleted);\r\n      case \"active\":\r\n        return tasks.filter((task) => !task.isCompleted);\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  getActiveTasksCounter = (tasks) =>\r\n    tasks.filter((task) => !task.isCompleted).length;\r\n\r\n  render() {\r\n    const { description} = this.state;\r\n    const { tasks, removeTask, completeTask, filters, changeFilter, clearAll,addEdeting } =\r\n      this.props;\r\n    const isTasksExsist = tasks && tasks.length > 0;\r\n    const filteredTasks = this.filterTasks(tasks, filters);\r\n    const taskCounter = this.getActiveTasksCounter(tasks);\r\n    return (\r\n      <div className=\"todo-wrapper\">\r\n        <TodoInput\r\n          onSubmit={this.addTask}\r\n          onChange={this.handleInputChange}\r\n          value={description}\r\n        />\r\n        {isTasksExsist && (\r\n          <TodoList\r\n            addEdeting = {addEdeting}\r\n            onKeyPress = {this.configEdeting}\r\n            onChange = {this.handleDescriptionChange}\r\n            completeTask={completeTask}\r\n            tasksList={filteredTasks}\r\n            removeTask={removeTask}\r\n          />\r\n        )}\r\n        {isTasksExsist && (\r\n          <TodoFilter\r\n            clearAll={clearAll}\r\n            changeFilter={changeFilter}\r\n            amount={taskCounter}\r\n            activeFilter={filters}\r\n          />\r\n        )}\r\n        <Notes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  ({ tasks, filters }) => ({\r\n    tasks,\r\n    filters,\r\n  }),\r\n  { addTask, removeTask, completeTask, changeFilter, addEdeting,configEdeting, clearAll }\r\n)(ToDo);\r\n","import {ADD_TASK,REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER, CHANGE_DESCRIPTION, CLEAR_ALL, CONFIG_CHANGES} from '../../constans';\r\n\r\nexport const addTask = (id, text, isCompleted, isEditing) => ({\r\n    type: ADD_TASK,\r\n    id,\r\n    text,\r\n    isCompleted,\r\n    isEditing\r\n});\r\n\r\nexport const removeTask = (id) => ({\r\n    type: REMOVE_TASK,\r\n    id,\r\n})\r\n\r\nexport const completeTask = id => ({\r\n    type: COMPLETE_TASK,\r\n    id\r\n})\r\n\r\nexport const changeFilter = activeFilter => ({\r\n    type: CHANGE_FILTER,\r\n    activeFilter\r\n})\r\n\r\nexport const addEdeting = (id)=> ({\r\n    type: CHANGE_DESCRIPTION,\r\n    id,\r\n})\r\n\r\nexport const configEdeting = (id,text) => ({\r\n    type: CONFIG_CHANGES,\r\n    id,\r\n    text\r\n})\r\n\r\nexport const clearAll = () => ({\r\n    type: CLEAR_ALL\r\n})","export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\r\nexport const CLEAR_ALL = 'CLEAR_ALL';\r\nexport const CONFIG_CHANGES = 'CONFIG_CHANGES';","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './title.css';\r\n\r\nconst Title = ({title}) => (\r\n    <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n    \r\nTitle.defaultProps = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Title;","import React, {Fragment} from \"react\";\n\nimport ToDo from './containers/todo/todo';\nimport Title from './components/title/title';\n\n\nconst App = () => (\n  <Fragment>\n    <Title title = \"TODO\"/>\n    <ToDo/>\n  </Fragment>\n);\n\nexport default App;","import {\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n  COMPLETE_TASK,\r\n  CHANGE_DESCRIPTION,\r\n  CLEAR_ALL,\r\n  CONFIG_CHANGES,\r\n} from \"../../constans\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nlet TASKS = load({ namespace: \"todo_list\" });\r\n\r\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\r\n  TASKS = {\r\n    tasks: [],\r\n  };\r\n}\r\n\r\nconst tasks = (\r\n  state = TASKS.tasks,\r\n  { id, text, isCompleted,isEditing, type }\r\n) => {\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id,\r\n          text,\r\n          isCompleted,\r\n          isEditing\r\n        },\r\n      ];\r\n    case REMOVE_TASK:\r\n      return [...state].filter((task) => task.id !== id);\r\n    case COMPLETE_TASK:\r\n      return [...state].map((task) => {\r\n        if (task.id === id) {\r\n          task.isCompleted = !task.isCompleted;\r\n        }\r\n        return task;\r\n      });\r\n    case CHANGE_DESCRIPTION:\r\n      return [...state].map((task) => {\r\n        if (task.id === id) {\r\n          task.isEditing = !task.isEditing;\r\n        }\r\n        return task;\r\n      });\r\n    case CONFIG_CHANGES:\r\n      return [...state].map((task) => {\r\n        if (task.id === id) {\r\n          task.text = text;\r\n          task.isEditing = false;\r\n        }\r\n        return task;\r\n      });\r\n    case CLEAR_ALL:\r\n      return (state = []);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default tasks;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redusers/index\";\r\nimport { save } from \"redux-localstorage-simple\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window == \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst configureStore = (preloadedState) =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(save({ namespace: \"todo_list\" })))\r\n  );\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","import { CHANGE_FILTER } from \"../../constans\";\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filter = (state = BASE_FILTER, {type, activeFilter}) => {\r\n    switch(type){\r\n        case CHANGE_FILTER: \r\n            return activeFilter;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filter;","import { combineReducers } from 'redux';\r\n\r\nimport tasks from './tasks'\r\nimport filters from './filters'\r\n\r\nconst rootReducer = combineReducers({tasks, filters});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './modules/App.js';\nimport { Provider } from 'react-redux';\nimport store from './modules/store';\n\nimport './index.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n"],"sourceRoot":""}