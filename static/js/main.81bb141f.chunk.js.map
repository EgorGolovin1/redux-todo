{"version":3,"sources":["modules/components/todo-input/todo-input.jsx","modules/components/todo-item/todo-item.jsx","modules/components/todo-list/todo-list.jsx","modules/components/todo-filter/todo-filter.jsx","modules/components/todo-notes/todo-notes.jsx","modules/containers/todo/todo.jsx","modules/actions/actionCreator.js","constans.js","modules/components/title/title.jsx","modules/App.js","modules/redusers/tasks.js","modules/store.js","modules/redusers/filters.js","modules/redusers/index.js","index.js"],"names":["ToDoInput","_ref","value","onChange","onSubmit","react_default","a","createElement","className","type","placeholder","defaultProps","onKeyPress","ToDoItem","text","isCompleted","removeTask","completeTask","id","handleDescriptionChange","onKeyUp","e","key","target","contentEditable","suppressContentEditableWarning","checked","onClick","defaultProp","ToDoList","tasksList","map","_ref2","todo_item_todo_item","FILTERS_BTN","ToDoFilter","amount","activeFilter","changeFilter","clearAll","concat","Notes","href","ToDo","state","description","actualtext","handleInputChange","_this","setState","innerHTML","change","item","length","props","blur","addTask","preventDefault","Date","getTime","filterTasks","tasks","filter","task","getActiveTasksCounter","_this$state","this","_this$props","filters","isTasksExsist","filteredTasks","taskCounter","todo_input_todo_input","todo_list_todo_list","todo_filter_todo_filter","todo_notes_todo_notes","Component","connect","Title","title","PropTypes","string","App","react","components_title_title","todo_todo","TASKS","load","namespace","preloadedState","arguments","undefined","Object","toConsumableArray","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","createRoot","document","getElementById","render","es","modules_App"],"mappings":"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","file":"static/js/main.81bb141f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./todo-input.css\";\r\n\r\nconst ToDoInput = ({ value, onChange, onSubmit }) => (\r\n  <form onSubmit={onSubmit} className=\"todo-input-wrapper\">\r\n    <button type=\"submit\" className=\"add-btn\">\r\n      Add Task\r\n    </button>\r\n    <input\r\n      value={value}\r\n      className=\"add-input\"\r\n      placeholder=\"What needs to be done?\"\r\n      onChange={onChange}\r\n    />\r\n  </form>\r\n);\r\n\r\nToDoInput.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nToDoInput.defaultProps = {\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  value: \"\",\r\n};\r\n\r\nexport default ToDoInput;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./todo-item.css\";\r\nconst ToDoItem = ({\r\n  text,\r\n  isCompleted,\r\n  removeTask,\r\n  completeTask,\r\n  id,\r\n  handleDescriptionChange,\r\n  onKeyPress,\r\n}) => (\r\n  <li\r\n    className={isCompleted ? \"todo-item checked\" : \"todo-item\"}\r\n  >\r\n    <div\r\n      onKeyUp={(e) => handleDescriptionChange(e)}\r\n      onKeyPress={(e) => onKeyPress(id, e.key, e.target)}\r\n      contentEditable=\"true\"\r\n      className=\"todo-item-description\"\r\n      suppressContentEditableWarning=\"true\"\r\n    >\r\n      {text}\r\n    </div>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={isCompleted}\r\n      onChange={() => completeTask(id)}\r\n      className={\r\n        isCompleted ? \"tasks-btn-complete\" : \"tasks-btn-complete checked\"\r\n      }\r\n    />\r\n    <div\r\n      className=\"tasks-btn-delete \"\r\n      onClick={() => removeTask(id)}\r\n    ></div>\r\n  </li>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n  text: PropTypes.string,\r\n  isCompleted: PropTypes.bool,\r\n  removeTask: PropTypes.func,\r\n  id: PropTypes.number,\r\n  onKeyPress: PropTypes.func,\r\n  handleDescriptionChange: PropTypes.func,\r\n};\r\n\r\nToDoItem.defaultProp = {\r\n  text: \"\",\r\n  isCompleted: false,\r\n  removeTask: () => {},\r\n  id: 0,\r\n  onKeyPress: () => {},\r\n  handleDescriptionChange: () => {},\r\n};\r\nexport default ToDoItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ToDoItem from \"../todo-item/todo-item\";\r\nimport \"./todo-list.css\";\r\n\r\nconst ToDoList = ({\r\n  tasksList,\r\n  removeTask,\r\n  completeTask,\r\n  handleDescriptionChange,\r\n  onKeyPress,\r\n}) => (\r\n  <ul className=\"todo-list\">\r\n    {tasksList.map(({ id, text, isCompleted}) => (\r\n      <ToDoItem\r\n        onKeyPress={onKeyPress}\r\n        handleDescriptionChange={handleDescriptionChange}\r\n        completeTask={completeTask}\r\n        removeTask={removeTask}\r\n        id={id}\r\n        key={id}\r\n        text={text}\r\n        isCompleted={isCompleted}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n  tasksList: PropTypes.array,\r\n  removeTask: PropTypes.func,\r\n  completeTask: PropTypes.func,\r\n  handleDescriptionChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n};\r\n\r\nToDoList.defaultProps = {\r\n  tasksList: [],\r\n  removeTask: () => {},\r\n  completeTask: () => {},\r\n  handleDescriptionChange: () => {},\r\n  onKeyPress: () => {},\r\n};\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./todo-filter.css\";\r\n\r\nconst FILTERS_BTN = [\r\n  {\r\n    text: \"Show All\",\r\n    id: \"all\",\r\n  },\r\n  {\r\n    text: \"Show Active\",\r\n    id: \"active\",\r\n  },\r\n  {\r\n    text: \"Show Completed\",\r\n    id: \"completed\",\r\n  },\r\n];\r\n\r\nconst ToDoFilter = ({ amount, activeFilter, changeFilter, clearAll }) => (\r\n  <div className=\"todo-filter\">\r\n    <span className=\"amount\">{`${amount} Tasks left`}</span>\r\n    <div className=\"btn-group\">\r\n      {FILTERS_BTN.map(({ text, id }) => (\r\n        <button\r\n          onClick={() => {\r\n            changeFilter(id);\r\n          }}\r\n          key={id}\r\n          className={id === activeFilter ? \"btn tabbed\" : \"btn\"}\r\n        >\r\n          {text}\r\n        </button>\r\n      ))}\r\n    </div>\r\n    <button onClick={clearAll} className=\"btn delete\">\r\n      Clear All\r\n    </button>\r\n  </div>\r\n);\r\n\r\nToDoFilter.propTypes = {\r\n  amount: PropTypes.number,\r\n  activeFilter: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nToDoFilter.defaultProp = {\r\n  changeFilter: () => {},\r\n  activeFilter: \"\",\r\n  amount: 0,\r\n};\r\n\r\nexport default ToDoFilter;","import React from \"react\";\r\n\r\nimport \"./todo-notes.css\";\r\n\r\nconst Notes = () => {\r\n  return (\r\n    <div className=\"app-explanation\">\r\n      <h3 className=\"app-explanation-item\">Click to edit a task</h3>\r\n      <h3 className=\"app-explanation-item\">\r\n        Press \"Enter\" to save your changes\r\n      </h3>\r\n      <h3 className=\"app-explanation-item\">\r\n        Created by{\" \"}\r\n        <a className=\"my-profile\" href=\"/#\">\r\n          Egor Golovin\r\n        </a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addTask,\r\n  removeTask,\r\n  completeTask,\r\n  changeFilter,\r\n  change,\r\n  clearAll,\r\n} from \"../../actions/actionCreator\";\r\n\r\nimport TodoInput from \"../../components/todo-input/todo-input\";\r\nimport TodoList from \"../../components/todo-list/todo-list\";\r\nimport TodoFilter from \"../../components/todo-filter/todo-filter\";\r\nimport Notes from \"../../components/todo-notes/todo-notes\";\r\n\r\nimport \"./todo.css\";\r\n\r\nclass ToDo extends Component {\r\n  state = {\r\n    description: \"\",\r\n    actualtext: \"\",\r\n  };\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      description: value,\r\n    });\r\n  };\r\n\r\n  handleDescriptionChange = (e) => {\r\n    this.setState({\r\n      actualtext: e.target.innerHTML,\r\n    });\r\n  };\r\n\r\n  change = (id, key, item) => {\r\n    let { actualtext } = this.state;\r\n    if (actualtext.length > 3 && key === \"Enter\") {\r\n      let { change } = this.props;\r\n      change(id, actualtext);\r\n      item.blur();\r\n    }\r\n  };\r\n\r\n  addTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { description } = this.state;\r\n\r\n    if (description.length > 3) {\r\n      const { addTask } = this.props;\r\n      addTask(new Date().getTime(), description, false, false);\r\n\r\n      this.setState({\r\n        description: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  filterTasks = (tasks, activeFilter) => {\r\n    switch (activeFilter) {\r\n      case \"completed\":\r\n        return tasks.filter((task) => task.isCompleted);\r\n      case \"active\":\r\n        return tasks.filter((task) => !task.isCompleted);\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  getActiveTasksCounter = (tasks) =>\r\n    tasks.filter((task) => !task.isCompleted).length;\r\n\r\n  render() {\r\n    const { description, actualtext } = this.state;\r\n    const { tasks, removeTask, completeTask, filters, changeFilter, clearAll } =\r\n      this.props;\r\n    const isTasksExsist = tasks && tasks.length > 0;\r\n    const filteredTasks = this.filterTasks(tasks, filters);\r\n    const taskCounter = this.getActiveTasksCounter(tasks);\r\n    return (\r\n      <div className=\"todo-wrapper\">\r\n        <TodoInput\r\n          onSubmit={this.addTask}\r\n          onChange={this.handleInputChange}\r\n          value={description}\r\n        />\r\n        {isTasksExsist && (\r\n          <TodoList\r\n            actualtext={actualtext}\r\n            onKeyPress={this.change}\r\n            handleDescriptionChange={this.handleDescriptionChange}\r\n            completeTask={completeTask}\r\n            tasksList={filteredTasks}\r\n            removeTask={removeTask}\r\n          />\r\n        )}\r\n        {isTasksExsist && (\r\n          <TodoFilter\r\n            clearAll={clearAll}\r\n            changeFilter={changeFilter}\r\n            amount={taskCounter}\r\n            activeFilter={filters}\r\n          />\r\n        )}\r\n        <Notes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  ({ tasks, filters }) => ({\r\n    tasks,\r\n    filters,\r\n  }),\r\n  { addTask, removeTask, completeTask, changeFilter, change, clearAll }\r\n)(ToDo);\r\n","import {ADD_TASK,REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER, CHANGE_DESCRIPTION, CLEAR_ALL} from '../../constans';\r\n\r\nexport const addTask = (id, text, isCompleted) => ({\r\n    type: ADD_TASK,\r\n    id,\r\n    text,\r\n    isCompleted,\r\n});\r\n\r\nexport const removeTask = (id) => ({\r\n    type: REMOVE_TASK,\r\n    id,\r\n})\r\n\r\nexport const completeTask = id => ({\r\n    type: COMPLETE_TASK,\r\n    id\r\n})\r\n\r\nexport const changeFilter = activeFilter => ({\r\n    type: CHANGE_FILTER,\r\n    activeFilter\r\n})\r\n\r\nexport const change = (id, text)=> ({\r\n    type: CHANGE_DESCRIPTION,\r\n    id,\r\n    text,\r\n})\r\n\r\nexport const clearAll = () => ({\r\n    type: CLEAR_ALL\r\n})","export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\r\nexport const CLEAR_ALL = 'CLEAR_ALL';","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './title.css';\r\n\r\nconst Title = ({title}) => (\r\n    <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n    \r\nTitle.defaultProps = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Title;","import React, {Fragment} from \"react\";\n\nimport ToDo from './containers/todo/todo';\nimport Title from './components/title/title';\n\n\nconst App = () => (\n  <Fragment>\n    <Title title = \"TODO\"/>\n    <ToDo/>\n  </Fragment>\n);\n\nexport default App;","import {\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n  COMPLETE_TASK,\r\n  CHANGE_DESCRIPTION,\r\n  CLEAR_ALL,\r\n} from \"../../constans\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nlet TASKS = load({ namespace: \"todo_list\" });\r\n\r\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\r\n  TASKS = {\r\n    tasks: [],\r\n  };\r\n}\r\n\r\nconst tasks = (\r\n  state = TASKS.tasks,\r\n  { id, text, isCompleted, type }\r\n) => {\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id,\r\n          text,\r\n          isCompleted,\r\n        },\r\n      ];\r\n    case REMOVE_TASK:\r\n      return [...state].filter((task) => task.id !== id);\r\n    case COMPLETE_TASK:\r\n      return [...state].map((task) => {\r\n        if (task.id === id) {\r\n          task.isCompleted = !task.isCompleted;\r\n        }\r\n        return task;\r\n      });\r\n    case CHANGE_DESCRIPTION:\r\n      return [...state].map((task) => {\r\n        if (task.id === id) {\r\n          task.text = text;\r\n        }\r\n        return task;\r\n      });\r\n    case CLEAR_ALL:\r\n      return (state = []);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default tasks;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redusers/index\";\r\nimport { save } from \"redux-localstorage-simple\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window == \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst configureStore = (preloadedState) =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(save({ namespace: \"todo_list\" })))\r\n  );\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","import { CHANGE_FILTER } from \"../../constans\";\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filter = (state = BASE_FILTER, {type, activeFilter}) => {\r\n    switch(type){\r\n        case CHANGE_FILTER: \r\n            return activeFilter;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filter;","import { combineReducers } from 'redux';\r\n\r\nimport tasks from './tasks'\r\nimport filters from './filters'\r\n\r\nconst rootReducer = combineReducers({tasks, filters});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './modules/App.js';\nimport { Provider } from 'react-redux';\nimport store from './modules/store';\n\nimport './index.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n"],"sourceRoot":""}